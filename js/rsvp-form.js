// rsvp-form.js - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è
class RsvpForm {
    constructor() {
        this.form = document.getElementById('rsvpForm');
        this.attendanceRadios = document.querySelectorAll('input[name="attendance"]');
        this.guest2Fields = document.getElementById('guest2Fields');
        this.drink2Fields = document.getElementById('drink2Fields');
        
        this.init();
    }
    
    init() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è
        this.attendanceRadios.forEach(radio => {
            radio.addEventListener('change', (e) => {
                this.handleAttendanceChange(e.target.value);
            });
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        this.form.addEventListener('submit', (e) => {
            e.preventDefault();
            this.handleSubmit();
        });
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π
        this.hideGuest2Fields();
    }
    
    handleAttendanceChange(value) {
        console.log('–í—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç:', value);
        
        if (value === 'with_guest') {
            this.showGuest2Fields();
        } else {
            this.hideGuest2Fields();
        }
    }
    
    showGuest2Fields() {
        console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—è –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è');
        
        this.guest2Fields.classList.add('visible');
        this.drink2Fields.classList.add('visible');
        
        // –î–µ–ª–∞–µ–º –ø–æ–ª–µ –∏–º–µ–Ω–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º, –Ω–æ –ù–ï —á–µ–∫–±–æ–∫—Å—ã
        this.setGuest2NameRequired(true);
    }
    
    hideGuest2Fields() {
        console.log('–°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—è –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è');
        
        this.guest2Fields.classList.remove('visible');
        this.drink2Fields.classList.remove('visible');
        
        // –£–±–∏—Ä–∞–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª—è
        this.setGuest2NameRequired(false);
        this.clearGuest2Fields();
    }
    
    setGuest2NameRequired(required) {
        const guest2NameInput = document.getElementById('guest2_name');
        
        if (guest2NameInput) {
            guest2NameInput.required = required;
        }
        
        // –ù–ï –¥–µ–ª–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ - —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã
        const drink2Checkboxes = document.querySelectorAll('input[name="drinks2"]');
        drink2Checkboxes.forEach(checkbox => {
            checkbox.required = false; // –í—Å–µ–≥–¥–∞ false –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤
        });
    }
    
    clearGuest2Fields() {
        const guest2NameInput = document.getElementById('guest2_name');
        const drink2Checkboxes = document.querySelectorAll('input[name="drinks2"]');
        
        if (guest2NameInput) {
            guest2NameInput.value = '';
        }
        
        drink2Checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });
    }
    
    async handleSubmit() {
        const submitBtn = this.form.querySelector('.submit-btn');
        const formData = this.collectFormData();
        
        if (!this.validateForm(formData)) {
            return;
        }
        
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="btn-icon">‚è≥</span> –û—Ç–ø—Ä–∞–≤–∫–∞...';
        
        try {
            const success = await this.submitToGoogleForms(formData);
            if (success) {
                this.showMessage('‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.', 'success');
                this.form.reset();
                this.hideGuest2Fields();
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —É—Å–ø–µ—Ö–∞
                this.animateSuccess(submitBtn);
            } else {
                throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
            this.showMessage('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.', 'error');
            this.resetButton(submitBtn);
        }
    }
    
    animateSuccess(button) {
        button.innerHTML = '<span class="btn-icon">‚úÖ</span> –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
        button.style.background = 'linear-gradient(135deg, var(--olive-green) 0%, var(--olive-green-light) 100%)';
        
        setTimeout(() => {
            this.resetButton(button);
        }, 3000);
    }
    
    resetButton(button) {
        button.disabled = false;
        button.innerHTML = '<span class="btn-icon">üíå</span> –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç';
        button.style.background = '';
    }
    
    collectFormData() {
        const formData = new FormData(this.form);
        
        // –°–æ–±–∏—Ä–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã –≤—Ä—É—á–Ω—É—é, —Ç–∞–∫ –∫–∞–∫ FormData –º–æ–∂–µ—Ç –∏—Ö —Ç–µ—Ä—è—Ç—å
        const drinks = Array.from(document.querySelectorAll('input[name="drinks"]:checked'))
            .map(cb => cb.value);
        const drinks2 = Array.from(document.querySelectorAll('input[name="drinks2"]:checked'))
            .map(cb => cb.value);
        
        const data = {
            guestName: formData.get('guest_name') || '',
            attendance: formData.get('attendance') || '',
            guest2Name: formData.get('guest2_name') || '',
            drinks: drinks,
            drinks2: drinks2
        };
        
        console.log('–°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);
        return data;
    }
    
    validateForm(data) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –≥–æ—Å—Ç—è
        if (!data.guestName.trim()) {
            this.showMessage('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é', 'error');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è
        if (!data.attendance) {
            this.showMessage('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è', 'error');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç "—Å –≥–æ—Å—Ç–µ–º"
        if (data.attendance === 'with_guest' && !data.guest2Name.trim()) {
            this.showMessage('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è', 'error');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤ –≥–æ—Å—Ç—è 1
        if (data.drinks.length === 0) {
            this.showMessage('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º', 'error');
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤ –≥–æ—Å—Ç—è 2, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç "—Å –≥–æ—Å—Ç–µ–º"
        if (data.attendance === 'with_guest' && data.drinks2.length === 0) {
            this.showMessage('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è', 'error');
            return false;
        }
        
        return true;
    }
    
    async submitToGoogleForms(data) {
        // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–£ –°–°–´–õ–ö–£ Google Forms
        const googleFormUrl = 'https://docs.google.com/forms/d/e/1FAIpQLSdcvuH1aN4kMR_uyI2VUARsYPtak65CAyRgShijENP58u2bFw/formResponse';
        
        // –°–æ–∑–¥–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞ (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ)
        const params = new URLSearchParams();
        
        // –ú–ê–ü–ü–ò–ù–ì –ü–û–õ–ï–ô - –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–ò –†–ï–ê–õ–¨–ù–´–ï ID!
        params.append('entry.131366440', data.guestName);        // –ò–º—è –≥–æ—Å—Ç—è
        params.append('entry.932005373', data.attendance);       // –ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
        
        if (data.attendance === 'with_guest') {
            params.append('entry.1614335047', data.guest2Name);   // –ò–º—è –≤—Ç–æ—Ä–æ–≥–æ –≥–æ—Å—Ç—è
        }
        
        // –ù–∞–ø–∏—Ç–∫–∏ –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
        params.append('entry.1682634094', data.drinks.join(', '));
        
        if (data.attendance === 'with_guest') {
            params.append('entry.743493720', data.drinks2.join(', '));
        }
        
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º fetch —Å –ø–æ–ª–Ω—ã–º URL
            const fullUrl = `${googleFormUrl}?${params.toString()}`;
            console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ URL:', fullUrl);
            
            const response = await fetch(fullUrl, {
                method: 'GET',
                mode: 'no-cors' // no-cors –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS
            });
            
            // –ü—Ä–∏ mode: 'no-cors' –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç, –Ω–æ –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
            console.log('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (no-cors)');
            return true;
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ fetch:', error);
            throw error;
        }
    }
    
    showMessage(text, type) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const existingMessage = this.form.querySelector('.form-message');
        if (existingMessage) {
            existingMessage.remove();
        }
        
        const message = document.createElement('div');
        message.className = `form-message ${type}`;
        message.textContent = text;
        
        this.form.appendChild(message);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        if (type === 'success') {
            setTimeout(() => {
                message.remove();
            }, 5000);
        }
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –æ–± –æ—à–∏–±–∫–µ
        if (type === 'error') {
            message.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    window.rsvpForm = new RsvpForm();
});