// animations.js - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
class ScrollAnimations {
    constructor() {
        this.hero = document.querySelector('.hero');
        this.heroContent = document.querySelector('.hero-content');
        this.header = document.getElementById('mainHeader');
        this.headerLeft = document.getElementById('headerLeft');
        this.headerRight = document.getElementById('headerRight');
        this.heroTitle = document.querySelector('.hero-title');
        this.heroSubtitle = document.querySelector('.hero-subtitle');
        this.heroDate = document.querySelector('.hero-date');
        this.sections = document.querySelectorAll('section:not(.hero)');
        this.goldBeads = document.querySelectorAll('.gold-bead');
        
        this.animationCompleted = false;
        this.heroContentHidden = false;
        this.scrollThreshold = 150;
        this.parallaxSpeed = 0.5;
        this.fadeStartThreshold = 300;
        
        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        this.lastScrollY = 0;
        this.ticking = false;
        this.rafId = null;
        
        console.log('üí´ –ê–Ω–∏–º–∞—Ü–∏–∏ —Å –ø–∞—Ä–∞–ª–ª–∞–∫—Å–æ–º –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }
    
    initPageLoadAnimations() {
        console.log('üé® –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å –ø–∞—Ä–∞–ª–ª–∞–∫—Å–æ–º...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ —Ä–∞–±–æ—Ç–æ–π —Å –Ω–∏–º–∏
        if (!this.checkRequiredElements()) {
            console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π');
            return;
        }
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        this.sections.forEach(section => {
            if (section) {
                section.classList.add('section-animate');
            }
        });
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≥–µ—Ä–æ—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        [this.heroTitle, this.heroSubtitle, this.heroDate].forEach(el => {
            if (el) {
                el.classList.add('hero-element-fading');
            }
        });
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º hero-content –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        if (this.heroContent) {
            this.heroContent.classList.add('hero-content-fading');
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä–∞–ª–ª–∞–∫—Å –¥–ª—è –±—É—Å–∏–Ω
        this.goldBeads.forEach(bead => {
            if (bead) {
                bead.classList.add('scroll-parallax');
            }
        });
        
        // –°–ª—É—à–∞–µ–º —Å–∫—Ä–æ–ª–ª —Å requestAnimationFrame –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        window.addEventListener('scroll', this.handleScroll.bind(this), { passive: true });
        
        // –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
        this.animateSections();
        
        console.log('‚úÖ –ê–Ω–∏–º–∞—Ü–∏–∏ —Å –ø–∞—Ä–∞–ª–ª–∞–∫—Å–æ–º –≥–æ—Ç–æ–≤—ã');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    checkRequiredElements() {
        const required = [
            this.hero, this.heroContent, this.header,
            this.heroTitle, this.heroSubtitle, this.heroDate
        ];
        
        return required.every(el => {
            if (!el) {
                console.warn('–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', el);
                return false;
            }
            return true;
        });
    }
    
    handleScroll() {
        this.lastScrollY = window.scrollY;
        
        if (!this.ticking) {
            this.rafId = requestAnimationFrame(() => {
                this.processScroll(this.lastScrollY);
                this.ticking = false;
            });
            this.ticking = true;
        }
    }
    
    processScroll(scrollY) {
        // –ü–∞—Ä–∞–ª–ª–∞–∫—Å –∏ –ø–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≥–µ—Ä–æ—è
        this.applyHeroParallaxAndFade(scrollY);
        
        // –ü–∞—Ä–∞–ª–ª–∞–∫—Å –¥–ª—è –±—É—Å–∏–Ω
        this.animateBeads(scrollY);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —à–∞–ø–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø–æ—Ä–æ–≥–∞
        if (scrollY > this.scrollThreshold && !this.animationCompleted) {
            this.startHeaderAnimation();
        }
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–µ–∫—Ü–∏–π (—Ä–µ–∂–µ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
        if (scrollY % 30 === 0) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30px —Å–∫—Ä–æ–ª–ª–∞
            this.animateSections();
        }
    }
    
    applyHeroParallaxAndFade(scrollY) {
        if (!this.heroContent || this.heroContentHidden) return;
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Ä–æ–≥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ hero —Å–µ–∫—Ü–∏–∏
        const heroRect = this.hero.getBoundingClientRect();
        const heroBottom = heroRect.bottom + scrollY;
        const fadeStart = heroBottom - window.innerHeight + this.fadeStartThreshold;
        
        // –ü–∞—Ä–∞–ª–ª–∞–∫—Å - –∫–æ–Ω—Ç–µ–Ω—Ç –¥–≤–∏–≥–∞–µ—Ç—Å—è –≤–≤–µ—Ä—Ö –º–µ–¥–ª–µ–Ω–Ω–µ–µ —Å–∫—Ä–æ–ª–ª–∞
        const parallaxOffset = scrollY * this.parallaxSpeed;
        this.heroContent.style.transform = `translateY(${parallaxOffset}px)`;
        
        // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞
        if (scrollY > fadeStart) {
            // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ—Ç 1 –¥–æ 0
            const fadeProgress = Math.min(1, (scrollY - fadeStart) / 200);
            const opacity = 1 - fadeProgress;
            
            this.heroContent.style.opacity = opacity.toString();
            
            // –ï—Å–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—á–µ–∑, –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Å–∫—Ä—ã—Ç—ã–π
            if (opacity <= 0.1 && !this.heroContentHidden) {
                this.heroContentHidden = true;
                this.heroContent.classList.add('hero-content-hidden');
                console.log('üé≠ Hero-content –ø–ª–∞–≤–Ω–æ –∏—Å—á–µ–∑');
            }
        } else {
            // –ü–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –ø–æ—Ä–æ–≥–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è - –ø–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
            this.heroContent.style.opacity = '1';
            this.heroContentHidden = false;
            this.heroContent.classList.remove('hero-content-hidden');
        }
    }
    
    startHeaderAnimation() {
        console.log('üëë –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –≤ —à–∞–ø–∫—É...');
        this.animationCompleted = true;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–ø–∫—É
        if (this.header) {
            this.header.classList.add('visible');
            // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ —à–∞–ø–∫–∞ –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
            this.header.style.transform = 'translateY(0)';
            this.header.style.opacity = '1';
            this.header.style.pointerEvents = 'all';
        }

        // –ü–ª–∞–≤–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≥–µ—Ä–æ—è
        [this.heroTitle, this.heroSubtitle, this.heroDate].forEach(el => {
            if (el) {
                el.classList.add('fading-to-header');
            }
        });

        // –£—Å–∫–æ—Ä—è–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ hero-content –µ—Å–ª–∏ –µ—â–µ –Ω–µ –∏—Å—á–µ–∑
        if (!this.heroContentHidden && this.heroContent) {
            this.heroContent.style.opacity = '0';
            this.heroContent.classList.add('hero-content-hidden');
            this.heroContentHidden = true;
        }

        // –ü–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —à–∞–ø–∫–µ
        setTimeout(() => {
            if (this.headerLeft && this.heroTitle) {
                this.headerLeft.textContent = this.heroTitle.textContent;
                this.headerLeft.classList.add('visible');
            }
            
            if (this.headerRight && this.heroDate) {
                this.headerRight.textContent = this.heroDate.textContent;
                this.headerRight.classList.add('visible');
            }
            
            console.log('üéâ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —à–∞–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω');
        }, 600);
    }
    
    animateBeads(scrollY) {
        if (this.animationCompleted) return;
        
        this.goldBeads.forEach((bead, index) => {
            if (!bead) return;
            
            const speed = (index % 3 + 1) * 0.1;
            const movement = scrollY * speed * 0.3;
            
            bead.style.transform = `translateY(${movement}px)`;
        });
    }
    
    animateSections() {
        const viewportHeight = window.innerHeight;
        
        this.sections.forEach((section, index) => {
            if (!section) return;
            
            const sectionTop = section.getBoundingClientRect().top;
            const sectionVisible = 100;
            
            if (sectionTop < viewportHeight - sectionVisible) {
                setTimeout(() => {
                    section.classList.add('section-visible');
                }, index * 200);
            }
        });
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏
    destroy() {
        if (this.rafId) {
            cancelAnimationFrame(this.rafId);
        }
        window.removeEventListener('scroll', this.handleScroll);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
document.addEventListener('DOMContentLoaded', () => {
    try {
        window.scrollAnimations = new ScrollAnimations();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π:', error);
        // Fallback: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π
        document.body.classList.add('page-loaded');
        document.querySelectorAll('.section-animate').forEach(section => {
            section.classList.add('section-visible');
        });
    }
});